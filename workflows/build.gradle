apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

cordapp {
    targetPlatformVersion corda_platform_version.toInteger()
    minimumPlatformVersion corda_platform_version.toInteger()
    workflow {
        name "Carmen Workflows"
        vendor "Dapps Incorporated"
        licence "Apache License, Version 2.0"
        versionId 1
    }
}

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
    test {
        resources {
            srcDir rootProject.file("config/test")
        }
    }
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/kotlin')
        }
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {

    cordapp project(":contracts")
    // Corda deps
    cordaCompile "$corda_release_group:corda-core:$corda_release_version"
    cordaCompile "$corda_release_group:corda-jackson:$corda_release_version"
    cordaCompile "$corda_release_group:corda-rpc:$corda_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"

    testImplementation ("$corda_release_group:corda-node-driver:$corda_release_version")
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: [':server:jar']) {
    directory "./build/nodes"
    node {
        name "O=Notary,L=London,C=GB"
        notary = [validating : true]
        p2pPort 10002
        rpcSettings {
            address("localhost:10003")
            adminAddress("localhost:10043")
        }
        //cordapps = []
    }
    node {
        name "O=PartyA,L=London,C=GB"
        p2pPort 10005
        rpcSettings {
            address("localhost:10006")
            adminAddress("localhost:10046")
        }
        cordapps = []
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        // Automatically run at least a single, multi-node Spring Boot instance
        webPort 8080
        webserverJar = "${rootProject.projectDir}/server/build/libs/server-${project.version}.jar"
    }
    node {
        name "O=PartyB,L=New York,C=US"
        p2pPort 10008
        rpcSettings {
            address("localhost:10009")
            adminAddress("localhost:10049")
        }
        // Uncomment the following two lines to automatically launch a separate Spring Boot webserver per node
        //webPort 10010
        //webserverJar = "${rootProject.projectDir}/server/build/libs/server-${project.version}.jar"
        //cordapps = []
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
    node {
        name "O=PartyC,L=San Francisco,C=US"
        p2pPort 10011
        rpcSettings {
            address("localhost:10012")
            adminAddress("localhost:10052")
        }
        // Uncomment the following two lines to automatically launch a separate Spring Boot webserver per node
        //webPort 10010
        //webserverJar = "${rootProject.projectDir}/server/build/libs/server-${project.version}.jar"
        //cordapps = []
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
}